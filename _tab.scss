// Tab component variables
$tab-generate-scheme: true;

/* Tab component prototype */
div.tab {
	margin-bottom: $element-margin;

	> div.tab-triggers > ul.grid {
		border-left: 1px solid $border-color;
		margin-bottom: 0;

		> li.grid-col > button {
			background-color: $border-bg-color;
			border-color: $border-color;
			border-style: solid;
			border-width: 1px 1px 0px 0px;
			color: $fg-light-color;
			cursor: pointer;
			padding: $box-padding * 0.75 $box-padding;
			text-align: center;
			width: 100%;

			&.is-selected {
				background-color: inherit;
				color: $fg-color;
			}

			&.keyboard-focus:focus {
				box-shadow: inset 0 0 0 3px $focus-color;
				outline: 0;
			}
		}
	}

	> div.tab-panel {
		border-radius: 0 0 $border-radius $border-radius;
		border: 1px solid $border-color;
		display: none;
		padding: $box-padding;

		&.is-visible {
			display: block;
		}

		> :last-child,
		> :last-child > :last-child,
		> :last-child > :last-child > :last-child {
			margin-bottom: 0;
		}
	}
}

/* Tab component extensions */
div.tab {
}

/* Tab component scheme modifications */
@each $scheme in map-keys($schemes) {
	@if (map-val($schemes, $scheme, generate-scheme) and $tab-generate-scheme) {
		&.scheme--#{$scheme} {

			div.tab {

				> div.tab-triggers > ul.grid {
					border-color: map-val($schemes, $scheme, border-color);

					> li.grid-col > button {
						border-color: map-val($schemes, $scheme, border-color);
						background-color: map-val($schemes, $scheme, border-bg-color);
						color: map-val($schemes, $scheme, fg-light-color);

						&.is-selected {
							background-color: inherit;
							color: map-val($schemes, $scheme, fg-color);
						}
					}
				}

				> div.tab-panel {
					border-color: map-val($schemes, $scheme, border-color);
				}
			}
		}
	}
}